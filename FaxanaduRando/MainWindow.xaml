<Window x:Class="FaxanaduRando.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:randomizer="clr-namespace:FaxanaduRando.Randomizer"
        mc:Ignorable="d"
        Title="Randumizer v0.25 Beta 2" Height="450" Width="900">
    <Window.Resources>
        <randomizer:FlagConverter x:Key="MultiValueConverter" />
        <randomizer:FlagPresets x:Key="flagPresets" />
        <randomizer:HintSettings x:Key="hintSettings" />
        <randomizer:HintConverter x:Key="hintConverter" />
        <randomizer:MiscDoorSettings x:Key="miscDoorSettings" />
        <randomizer:MiscDoorConverter x:Key="miscDoorConverter" />
        <randomizer:EnemyHPSettings x:Key="enemyHPSettings" />
        <randomizer:EnemyHPConverter x:Key="enemyHPConverter" />
        <randomizer:EnemyDamageSettings x:Key="enemyDamageSettings" />
        <randomizer:EnemyDamageConverter x:Key="enemyDamageConverter" />
        <randomizer:EnemySetSettings x:Key="enemySetSettings" />
        <randomizer:EnemySetConverter x:Key="enemySetConverter" />
        <randomizer:StartingWeaponSettings x:Key="startingWeapon" />
        <randomizer:StartingWeaponConverter x:Key="startingWeaponConverter" />
        <randomizer:MattockUsageSettings x:Key="mattockUsageSettings" />
        <randomizer:MattockUsageConverter x:Key="mattockUsageConverter" />
        <randomizer:WingBootSettingsConverter x:Key="wingBootConverter" />
        <randomizer:WingBootSettings x:Key="wingBootSettings" />
        <randomizer:ShieldSettings x:Key="shieldSettings" />
        <randomizer:BigItemSpawnsSettings x:Key="bigItemSpawnsSettings" />
        <randomizer:BigItemSpawnsSettingsConverter x:Key="bigItemSpawnsSettingsConverter" />
        <randomizer:WorldDoorSettings x:Key="worldDoorSettings" />
        <randomizer:WorldDoorConverter x:Key="worldDoorConverter" />
        <randomizer:ScreenRandomizationSettings x:Key="screenRandomizationSettings" />
        <randomizer:ScreenRandomizationConverter x:Key="screenRandomizationConverter" />
        <randomizer:ShuffleItemsSettings x:Key="itemShuffleSettings" />
        <randomizer:ShuffleItemsConverter x:Key="itemShuffleSettingsConverter" />
        <randomizer:RandomizeKeysSettings x:Key="randomizeKeysSettings" />
        <randomizer:RandomizeKeysConverter x:Key="randomizeKeysConverter" />
        <randomizer:MusicSettings x:Key="musicSettings" />
        <randomizer:MusicConverter x:Key="musicConverter" />
    </Window.Resources>
    <TabControl>
        <TabItem Header="General">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Column="0" Grid.Row="0" Text="ROM Path"/>

                <TextBox Name ="pathTextBox" Grid.Column="0" Grid.Row="1"/>
                <Button Content="Browse" Grid.Column="1" Grid.Row="1" Click="BrowseButton_Click"/>

                <TextBlock Grid.Column="0" Grid.Row="2" Text="Seed"/>

                <Button Content="New seed" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="4" Click="NewSeedButton_Click"/>
                <TextBox Name="seedTextBox" HorizontalAlignment="Left" MinWidth="50" Text="0" Grid.Column="0" Grid.Row="3"/>

                <TextBlock Grid.Column="0" Grid.Row="5" Text="Flags"/>

                <TextBox Name="flagsTextBox" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="6">
                    <TextBox.Text>
                        <MultiBinding UpdateSourceTrigger="PropertyChanged" NotifyOnSourceUpdated="True" NotifyOnTargetUpdated="True" Mode="TwoWay" Converter="{StaticResource MultiValueConverter}">
                            <Binding ElementName="fastTextCheckBox" Path="IsChecked" />
                            <Binding ElementName="fullHealthCheckBox" Path="IsChecked" />
                            <Binding ElementName="dragonSlayerRequiredCheckBox" Path="IsChecked" />
                            <Binding ElementName="pendantRodRubyRequiredCheckBox" Path="IsChecked" />
                            <Binding ElementName="moveSpringQuestRequirementCheckBox" Path="IsChecked" />
                            <Binding ElementName="moveFinalRequirementsCheckBox" Path="IsChecked" />
                            <Binding ElementName="shuffleTowersCheckBox" Path="IsChecked" />
                            <Binding ElementName="shuffleWorldsCheckBox" Path="IsChecked" />
                            <Binding ElementName="updateMiscTextCheckBox" Path="IsChecked" />
                            <Binding ElementName="generateSpoilerLogCheckBox" Path="IsChecked" />
                            <Binding ElementName="quickSeedCheckBox" Path="IsChecked" />
                            <Binding ElementName="allowLoweringRespawnCheckBox" Path="IsChecked" />
                            <Binding ElementName="preventKnockbackOnLaddersCheckBox" Path="IsChecked" />
                            <Binding ElementName="randomizeEnemyExperiencesCheckBox" Path="IsChecked" />
                            <Binding ElementName="randomizeRewardsCheckBox" Path="IsChecked" />
                            <Binding ElementName="randomizeMagicImmunitiesCheckBox" Path="IsChecked" />
                            <Binding ElementName="tryToMoveBossesCheckBox" Path="IsChecked" />
                            <Binding ElementName="guaranteeElixirNearFortressCheckbox" Path="IsChecked" />
                            <Binding ElementName="fixPendantBugCheckBox" Path="IsChecked" />
                            <Binding ElementName="buffGlovesCheckBox" Path="IsChecked" />
                            <Binding ElementName="buffHourglassCheckBox" Path="IsChecked" />
                            <Binding ElementName="randomizeBarRank" Path="IsChecked" />
                            <Binding ElementName="guaranteeStartingSpell" Path="IsChecked" />
                            <Binding ElementName="guaranteeMattock" Path="IsChecked" />
                            <Binding ElementName="allowMultipleGifts" Path="IsChecked" />
                            <Binding ElementName="replacePoisonCheckBox" Path="IsChecked" />
                            <Binding ElementName="alwaysSpawnSmallItemsCheckBox" Path="IsChecked" />
                            <Binding ElementName="allowEquippingIndoorsCheckbox" Path="IsChecked" />
                            <Binding ElementName="includeEvilOnesFortressCheckBox" Path="IsChecked" />
                            <Binding ElementName="darknessCheckBox" Path="IsChecked" />
                            <Binding ElementName="randomizeTitlesCheckBox" Path="IsChecked" />
                            <Binding ElementName="includeSomeEolisDoorsCheckBox" Path="IsChecked" />
                            <Binding ElementName="hintsComboBox" Path="SelectedIndex" />
                            <Binding ElementName="miscDoorsComboBox" Path="SelectedIndex" />
                            <Binding ElementName="worldDoorsComboBox" Path="SelectedIndex" />
                            <Binding ElementName="enemySetComboBox" Path="SelectedIndex" />
                            <Binding ElementName="enemyHPComboBox" Path="SelectedIndex" />
                            <Binding ElementName="enemyDamageComboBox" Path="SelectedIndex" />
                            <Binding ElementName="mattockUsageComboBox" Path="SelectedIndex" />
                            <Binding ElementName="startingWeaponComboBox" Path="SelectedIndex" />
                            <Binding ElementName="wingBootDurationComboBox" Path="SelectedIndex" />
                            <Binding ElementName="shieldSettingsComboBox" Path="SelectedIndex" />
                            <Binding ElementName="bigItemSpawnsComboBox" Path="SelectedIndex" />
                            <Binding ElementName="itemShuffleComboBox" Path="SelectedIndex" />
                            <Binding ElementName="keyRandomizationComboBox" Path="SelectedIndex" />
                            <Binding ElementName="randomizeScreensComboBox" Path="SelectedIndex" />
                        </MultiBinding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Grid.Column="0" Grid.Row="7" Text="Flag presets"/>

                <ComboBox
                    Name="flagPresetComboBox"
                    Grid.Column="0"
                    Grid.Row="8"
                    IsEditable="true"
                    IsReadOnly="true"
                    ItemsSource="{StaticResource flagPresets}"
                    SelectedIndex="0"
                    SelectionChanged="flagPresetComboBox_SelectionChanged"
                    >
                    <ComboBox.ToolTip>
                        <ToolTip>
                            <TextBlock Text="These are some predefined flagsets to use. ´beginner friendly´ is good for beginners that are new to the randomizer. 'Standard' tries to randomize most things, but leaves out some of the harder flags. 'Race (typical)' is good for a typical race. Race (classic) keeps the changes to the fundamentals of the game fairly low. 'Challenge mode' tries to create a really hard seed. 'Chaos mode' tries to do maximum randomization. 'Extra fast' tries to create a seed that can be beaten really quickly." TextWrapping="Wrap"/>
                        </ToolTip>
                    </ComboBox.ToolTip>
                </ComboBox>

                <Button Name="randomizeButton" HorizontalAlignment="Left" Content="Randomize" Grid.Column="0" Grid.Row="9" Click="RandomizeButton_Click"/>

                <CheckBox Name="generateSpoilerLogCheckBox" Grid.Column="2" Grid.Row="0" IsChecked="{Binding Path=(randomizer:GeneralOptions.GenerateSpoilerLog), Mode=TwoWay}"
                          ToolTip="Generates a .txt file with all item locations, and additional information depending on flags such as dungeon locations and door requirements if those are randomized"/>
                <TextBlock Grid.Column="3" Grid.Row="0" Text="Generate spoiler log"/>

                <CheckBox Name="fastTextCheckBox" Grid.Column="2" Grid.Row="1" IsChecked="{Binding Path=(randomizer:GeneralOptions.FastText), Mode=TwoWay}"
                          ToolTip="Makes the text load faster"/>
                <TextBlock Grid.Column="3" Grid.Row="1" Text="Fast text"/>

                <CheckBox Name="fullHealthCheckBox" Grid.Column="2" Grid.Row="2" IsChecked="{Binding Path=(randomizer:GeneralOptions.FastStart), Mode=TwoWay}"
                          ToolTip="You start with Full HP and MP, 1500 golds, and if 'randomize keys' is off you also start with the Ring of Elf"/>
                <TextBlock Grid.Column="3" Grid.Row="2" Text="Fast start"/>

                <CheckBox Name="dragonSlayerRequiredCheckBox" Grid.Column="2" Grid.Row="3" IsChecked="{Binding Path=(randomizer:GeneralOptions.DragonSlayerRequired), Mode=TwoWay}"
                                ToolTip="Can't beat the game without the full Battle gear equipped"/>
                <TextBlock Grid.Column="3" Grid.Row="3" Text="Make equipped dragon slayer required"/>

                <CheckBox Name="pendantRodRubyRequiredCheckBox" Grid.Column="2" Grid.Row="4" IsChecked="{Binding Path=(randomizer:GeneralOptions.PendantRodRubyRequired), Mode=TwoWay}"
                          ToolTip="Can't beat the game without all of these items"/>
                <TextBlock Grid.Column="3" Grid.Row="4" Text="Make pendant, magical rod and ruby ring required"/>

                <CheckBox Name="moveSpringQuestRequirementCheckBox" Grid.Column="2" Grid.Row="5" IsChecked="{Binding Path=(randomizer:GeneralOptions.MoveSpringQuestRequirement), Mode=TwoWay}"
                          ToolTip="Spring quest must be completed to beat the game, but is not needed to enter Mist. You still need to push the rock to enter Mist, but only need the ruby ring to do so"/>
                <TextBlock Grid.Column="3" Grid.Row="5" Text="Move spring quest requirement to final requirement"/>

                <CheckBox Name="moveFinalRequirementsCheckBox" Grid.Column="2" Grid.Row="6" IsChecked="{Binding Path=(randomizer:GeneralOptions.MoveFinalRequirements), Mode=TwoWay}"
                          ToolTip="Check for required items at the Evil Ones room instead of at the end of Dartmoor."/>
                <TextBlock Grid.Column="3" Grid.Row="6" Text="Move final requirements to final door"/>

                <CheckBox Name="shuffleTowersCheckBox" Grid.Column="2" Grid.Row="7" IsChecked="{Binding Path=(randomizer:GeneralOptions.ShuffleTowers), Mode=TwoWay}"
                          ToolTip="Tower locations are shuffled."/>
                <TextBlock Grid.Column="3" Grid.Row="7" Text="Shuffle towers"/>

                <CheckBox Name="shuffleWorldsCheckBox" Grid.Column="2" Grid.Row="8" IsChecked="{Binding Path=(randomizer:GeneralOptions.ShuffleWorlds), Mode=TwoWay}"
                          ToolTip="Shuffle the worlds after Eolis"/>
                <TextBlock Grid.Column="3" Grid.Row="8" Text="Shuffle worlds"/>

                <CheckBox Name="updateMiscTextCheckBox" Grid.Column="2" Grid.Row="9" IsChecked="{Binding Path=(randomizer:GeneralOptions.UpdateMiscText), Mode=TwoWay}"
                          ToolTip="Update various text related to randomization. One example is that NPCs holding items will tell you what they have if you have not fulfilled their requirement yet."/>
                <TextBlock Grid.Column="3" Grid.Row="9" Text="Update misc text"/>

                <CheckBox Name="quickSeedCheckBox" Grid.Column="2" Grid.Row="10" IsChecked="{Binding Path=(randomizer:GeneralOptions.QuickSeed), Mode=TwoWay}"
                          ToolTip="The randomizer will attempt to make the seed beatable more quickly than the average seed"/>
                <TextBlock Grid.Column="3" Grid.Row="10" Text="Quick seed"/>

                <CheckBox Name="allowLoweringRespawnCheckBox" Grid.Column="2" Grid.Row="11" IsChecked="{Binding Path=(randomizer:GeneralOptions.AllowLoweringRespawn), Mode=TwoWay}"
                          ToolTip="Makes it so talking to an earlier guru will set your respawn point there even if you previously had it further ahead"/>
                <TextBlock Grid.Column="3" Grid.Row="11" Text="Allow lowering of respawn value"/>

                <CheckBox Name="preventKnockbackOnLaddersCheckBox" Grid.Column="2" Grid.Row="12" IsChecked="{Binding Path=(randomizer:GeneralOptions.PreventKnockbackOnLadders), Mode=TwoWay}"
                          ToolTip="This will prevent the player from being knocked off ladders when taking damage"/>
                <TextBlock Grid.Column="3" Grid.Row="12" Text="Prevent knockback while on ladders"/>

                <CheckBox Name="allowEquippingIndoorsCheckbox" Grid.Column="4" Grid.Row="0" IsChecked="{Binding Path=(randomizer:GeneralOptions.AllowEquippingIndoors), Mode=TwoWay}"
                          ToolTip="Allow equipping items indoors. You still can't use your main weapon indoors."/>
                <TextBlock Grid.Column="5" Grid.Row="0" Text="Allow equipping items indoors"/>

                <CheckBox Name="darknessCheckBox" Grid.Column="4" Grid.Row="1" IsChecked="{Binding Path=(randomizer:GeneralOptions.DarkTowers), Mode=TwoWay}"
                          ToolTip="The inside of towers will be dark"/>
                <TextBlock Grid.Column="5" Grid.Row="1" Text="Dark towers"/>

                <CheckBox Name="randomizeTitlesCheckBox" Grid.Column="4" Grid.Row="2" IsChecked="{Binding Path=(randomizer:GeneralOptions.RandomizeTitles), Mode=TwoWay}"
                          ToolTip="The name, requirements and rewards for titles will be random"/>
                <TextBlock Grid.Column="5" Grid.Row="2" Text="Randomize titles"/>

                <CheckBox Name="includeEvilOnesFortressCheckBox" Grid.Column="4" Grid.Row="7" IsChecked="{Binding Path=(randomizer:GeneralOptions.IncludeEvilOnesFortress), Mode=TwoWay}"
                          ToolTip="The Evil One's fortress will be included in the tower shuffle. There will be an extra tower location, that replaces the first door on the Dartmoor screen with 4 doors, and the end of the final world will lead to Eolis"/>
                <TextBlock Grid.Column="5" Grid.Row="7" Text="Include Evil One's fortress in the tower shuffle"/>

                <TextBlock Grid.Column="1" Grid.Row="13" Text="Hints:"/>
                <StackPanel  Grid.Column="3"
                             Grid.Row="13">
                    <ComboBox Name="hintsComboBox"
                        ItemsSource="{StaticResource hintSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:GeneralOptions.HintSetting), Mode=TwoWay, Converter={StaticResource hintConverter}}"
                        ToolTip="Changes NPC dialog to add hints for things like item and dungeon locations"
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="14" Text="Misc doors:"/>
                <StackPanel  Grid.Column="3"
                             Grid.Row="14">
                    <ComboBox Name="miscDoorsComboBox"
                        ItemsSource="{StaticResource miscDoorSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:GeneralOptions.MiscDoorSetting), Mode=TwoWay, Converter={StaticResource miscDoorConverter}}"
                        ToolTip="Setting for miscellaneous doors, which may include different kinds of town doors as well as some of the doors outside towns"
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="15" Text="World doors:"/>
                <StackPanel  Grid.Column="3"
                             Grid.Row="15">
                    <ComboBox Name="worldDoorsComboBox"
                        ItemsSource="{StaticResource worldDoorSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:GeneralOptions.WorldDoorSetting), Mode=TwoWay, Converter={StaticResource worldDoorConverter}}"
                        ToolTip="Setting for how to shuffle the different door types in a world. This will allow towers to be in locations they normally are not."
                        />
                </StackPanel>
                <TextBlock Grid.Column="1" Grid.Row="16" Text="Screen connections:"/>
                <StackPanel  Grid.Column="3"
                             Grid.Row="16">
                    <ComboBox Name="randomizeScreensComboBox"
                        ItemsSource="{StaticResource screenRandomizationSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:GeneralOptions.RandomizeScreens), Mode=TwoWay, Converter={StaticResource screenRandomizationConverter}}"
                        ToolTip="If you randomize screen connections it is recommended that you also select ´permanent´ for the wing boot timer, to help prevent softlocks"
                        />
                </StackPanel>
            </Grid>
        </TabItem>
        <TabItem Header="Enemies">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <CheckBox Name="randomizeEnemyExperiencesCheckBox" Grid.Column="0" Grid.Row="0" IsChecked="{Binding Path=(randomizer:EnemyOptions.RandomizeExperience), Mode=TwoWay}"
                          ToolTip="Enemies give different experience values from vanilla"/>
                <TextBlock Grid.Column="1" Grid.Row="0" Text="Randomize enemy experience"/>

                <CheckBox Name="randomizeRewardsCheckBox" Grid.Column="0" Grid.Row="1" IsChecked="{Binding Path=(randomizer:EnemyOptions.RandomizeRewards), Mode=TwoWay}"
                          ToolTip="Enemies drop different things from vanilla (gold, food or nothing)"/>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="Randomize enemy drops"/>

                <CheckBox Name="randomizeMagicImmunitiesCheckBox" Grid.Column="0" Grid.Row="2" IsChecked="{Binding Path=(randomizer:EnemyOptions.RandomizeMagicImmunities), Mode=TwoWay}"
                          ToolTip="Each enemy will be immune to exactly one spell, and magic will pass through an immune enemy"/>
                <TextBlock Grid.Column="1" Grid.Row="2" Text="Randomize enemy magic immunities"/>

                <CheckBox Name="tryToMoveBossesCheckBox" Grid.Column="0" Grid.Row="3" IsChecked="{Binding Path=(randomizer:EnemyOptions.TryToMoveBosses), Mode=TwoWay}"
                          ToolTip="The randomizer will attempt to adjust the position of bosses to try to prevent them from being stuck"/>
                <TextBlock Grid.Column="1" Grid.Row="3" Text="Try to move bosses"/>

                <TextBlock Grid.Column="1" Grid.Row="4" Text="Enemy set: "/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="4">
                    <ComboBox Name="enemySetComboBox"
                        ItemsSource="{StaticResource enemySetSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:EnemyOptions.EnemySet), Mode=TwoWay, Converter={StaticResource enemySetConverter}}">
                        <ComboBox.ToolTip>
                            <ToolTip>
                                <TextBlock Text="Changes how enemies are randomized. No mixed enemy types means that bosses will only appear in vanilla boss locations. Scaling means that the enemies will become harder in the later worlds." TextWrapping="Wrap"/>
                            </ToolTip>
                        </ComboBox.ToolTip>
                    </ComboBox>
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="5" Text="Enemy HP: "/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="5">
                    <ComboBox Name="enemyHPComboBox"
                        ItemsSource="{StaticResource enemyHPSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:EnemyOptions.EnemyHPSetting), Mode=TwoWay, Converter={StaticResource enemyHPConverter}}"
                        ToolTip="Changes enemy HP values by a random numerical value or percentage value. Affects each enemy type seperately"
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="6" Text="Enemy damage: "/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="6">
                    <ComboBox Name="enemyDamageComboBox"
                        ItemsSource="{StaticResource enemyDamageSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:EnemyOptions.EnemyDamageSetting), Mode=TwoWay, Converter={StaticResource enemyDamageConverter}}"
                        ToolTip="Changes enemy Damage by a random numerical value or percantage value. Affects each enemy type seperately"
                        />
                </StackPanel>

            </Grid>
        </TabItem>
        <TabItem Header="Items">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <CheckBox Name="guaranteeElixirNearFortressCheckbox" Grid.Column="0" Grid.Row="1" IsChecked="{Binding Path=(randomizer:ItemOptions.GuaranteeElixirNearFortress), Mode=TwoWay}"
                          ToolTip="Guarantees that there will be an Elixir near the fountain that requires it"/>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="Guarantee elixir near Tower of Fortress spring"/>

                <CheckBox Name="fixPendantBugCheckBox" Grid.Column="0" Grid.Row="2" IsChecked="{Binding Path=(randomizer:ItemOptions.FixPendantBug), Mode=TwoWay}"
                          ToolTip="Collecting the pendant makes you stronger instead of weaker, but you will also be weaker at the start"/>
                <TextBlock Grid.Column="1" Grid.Row="2" Text="Fix pendant bug"/>

                <CheckBox Name="buffGlovesCheckBox" Grid.Column="0" Grid.Row="3" IsChecked="{Binding Path=(randomizer:ItemOptions.BuffGloves), Mode=TwoWay}"
                          ToolTip="Increases the glove duration"/>
                <TextBlock Grid.Column="1" Grid.Row="3" Text="Buff gloves"/>

                <CheckBox Name="buffHourglassCheckBox" Grid.Column="0" Grid.Row="4" IsChecked="{Binding Path=(randomizer:ItemOptions.BuffHourglass), Mode=TwoWay}"
                          ToolTip="The hourglass will no longer take half your HP when used"/>
                <TextBlock Grid.Column="1" Grid.Row="4" Text="Buff hourglass"/>

                <CheckBox Name="randomizeBarRank" Grid.Column="0" Grid.Row="5" IsChecked="{Binding Path=(randomizer:ItemOptions.RandomizeBarRank), Mode=TwoWay}"
                          ToolTip="Victim bar patron requires a random rank before giving you his item"/>
                <TextBlock Grid.Column="1" Grid.Row="5" Text="Randomize Victim bar rank requirement"/>

                <CheckBox Name="guaranteeStartingSpell" Grid.Column="0" Grid.Row="6" IsChecked="{Binding Path=(randomizer:ItemOptions.GuaranteeStartingSpell), Mode=TwoWay}"
                          ToolTip="Guarantees a spell in the first town"/>
                <TextBlock Grid.Column="1" Grid.Row="6" Text="Guarantee spell in Eolis"/>

                <CheckBox Name="guaranteeMattock" Grid.Column="0" Grid.Row="7" IsChecked="{Binding Path=(randomizer:ItemOptions.GuaranteeMattock), Mode=TwoWay}"
                          ToolTip="There will always be a mattock after the first breakable wall. Only guaranteed if there is a guru in the area."/>
                <TextBlock Grid.Column="1" Grid.Row="7" Text="Guarantee mattock near Forepaw"/>

                <TextBlock Grid.Column="1" Grid.Row="8" Text="Mattock usage:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="8">
                    <ComboBox Name="mattockUsageComboBox"
                        ItemsSource="{StaticResource mattockUsageSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ItemOptions.MattockUsage), Mode=TwoWay, Converter={StaticResource mattockUsageConverter}}"
                        ToolTip="Setting for allowing Mattock to be used in more places"
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="9" Text="Eolis weapon:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="9">
                    <ComboBox Name="startingWeaponComboBox"
                        ItemsSource="{StaticResource startingWeapon}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ItemOptions.StartingWeapon), Mode=TwoWay, Converter={StaticResource startingWeaponConverter}}"
                        ToolTip="Can set if there is a guaranteed weapon in Eolis. Random means there will be either a dagger or longsword guaranteed"
                        />
                </StackPanel>
                
                <TextBlock Grid.Column="1" Grid.Row="10" Text="Wing boot duration:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="10">
                    <ComboBox Name="wingBootDurationComboBox"
                        ItemsSource="{StaticResource wingBootSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ItemOptions.WingbootDurationSetting), Mode=TwoWay, Converter={StaticResource wingBootConverter}}"
                        ToolTip="Changes how long Wing Boots are active, and how ranking up affects it"
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="11" Text="Shields:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="11">
                    <ComboBox Name="shieldSettingsComboBox"
                        ItemsSource="{StaticResource shieldSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ItemOptions.ShieldSetting), Mode=TwoWay}"
                        ToolTip="Changes how shields work"
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="12" Text="Big items:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="12">
                    <ComboBox Name="bigItemSpawnsComboBox"
                        ItemsSource="{StaticResource bigItemSpawnsSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ItemOptions.BigItemSpawns), Mode=TwoWay, Converter={StaticResource bigItemSpawnsSettingsConverter}}"
                        ToolTip="Change how 'big' items spawn, this includes the items that are normally locked behind a boss"
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="13" Text="Item shuffle:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="13">
                    <ComboBox Name="itemShuffleComboBox"
                        ItemsSource="{StaticResource itemShuffleSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ItemOptions.ShuffleItems), Mode=TwoWay, Converter={StaticResource itemShuffleSettingsConverter}}"
                        ToolTip="Change how to shuffle items. Mixing types fully will result in some items having an incorrect appearance, but they can still be collected."
                        />
                </StackPanel>

                <TextBlock Grid.Column="1" Grid.Row="14" Text="Key requirements:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="14">
                    <ComboBox Name="keyRandomizationComboBox"
                        ItemsSource="{StaticResource randomizeKeysSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ItemOptions.RandomizeKeys), Mode=TwoWay, Converter={StaticResource randomizeKeysConverter}}"
                        ToolTip="Change how to randomize key requirements"
                        />
                </StackPanel>

                <CheckBox Name="allowMultipleGifts" Grid.Column="3" Grid.Row="1" IsChecked="{Binding Path=(randomizer:ItemOptions.AllowMultipleGifts), Mode=TwoWay}">
                    <CheckBox.ToolTip>
                        <ToolTip>
                            <TextBlock Text="Can collect as many of the item given as you can hold. Normally if you have one, you cannot receive another. This only applies to the gurus that normally give the joker key and the ring of ruby. For the Eolis and Conflate guru, they will only give you an item if you don't have it, and for all other places, you can always receive multiple gifts." TextWrapping="Wrap"/>
                        </ToolTip>
                    </CheckBox.ToolTip>
                </CheckBox>
                <TextBlock Grid.Column="4" Grid.Row="1" Text="Allow multiple gifts from Fortress and Joker gurus"/>

                <CheckBox Name="replacePoisonCheckBox" Grid.Column="3" Grid.Row="2" IsChecked="{Binding Path=(randomizer:ItemOptions.ReplacePoison), Mode=TwoWay}"
                          ToolTip="Introduces a new item (Black Potion) that refills Mana, and removes all Poison from the game, replacing them with Black Potions"/>
                <TextBlock Grid.Column="4" Grid.Row="2" Text="Replace poison with mana potions"/>

                <CheckBox Name="alwaysSpawnSmallItemsCheckBox" Grid.Column="3" Grid.Row="3" IsChecked="{Binding Path=(randomizer:ItemOptions.AlwaysSpawnSmallItems), Mode=TwoWay}"
                          ToolTip="Small items will awlays spawn when there are no enemies on the screen, regardless of what the 'count' is"/>
                <TextBlock Grid.Column="4" Grid.Row="3" Text="Always spawn small items"/>

                <CheckBox Name="includeSomeEolisDoorsCheckBox" Grid.Column="3" Grid.Row="14" IsChecked="{Binding Path=(randomizer:ItemOptions.IncludeSomeEolisDoors), Mode=TwoWay}"
                          ToolTip="Include the Eolis magic shop, martial arts shop and exit door in the key randomization"/>
                <TextBlock Grid.Column="4" Grid.Row="14" Text="Include some Eolis doors"/>

            </Grid>
        </TabItem>

        <TabItem Header="Extra">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <CheckBox Name="randomizePalettesCheckbox" Grid.Column="0" Grid.Row="0" IsChecked="{Binding Path=(randomizer:ExtraOptions.RandomizePalettes), Mode=TwoWay}"
                          ToolTip="Randomizes which palettes are used."/>
                <TextBlock Grid.Column="1" Grid.Row="0" Text="Randomize palettes"/>

                <CheckBox Name="randomizeSoundEffectsCheckbox" Grid.Column="0" Grid.Row="1" IsChecked="{Binding Path=(randomizer:ExtraOptions.RandomizeSounds), Mode=TwoWay}"
                          ToolTip="Randomizes the different sound effects."/>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="Randomize sound effects"/>

                <TextBlock Grid.Column="1" Grid.Row="2" Text="Music:"/>
                <StackPanel  Grid.Column="2"
                             Grid.Row="2">
                    <ComboBox Name="musicComboBox"
                        ItemsSource="{StaticResource musicSettings}"
                        IsEditable="true"
                        IsReadOnly="true"
                        SelectedIndex="{Binding Path=(randomizer:ExtraOptions.MusicSetting), Mode=TwoWay, Converter={StaticResource musicConverter}}"
                        ToolTip="Change how to handle music"
                        />
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>
</Window>
